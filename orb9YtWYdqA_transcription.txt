have you ever spent months building an
app only to get crickets on launch
day yeah me too but after shipping three
react native apps lately I've learned
some lessons the hard way so you don't
have to hey react native friends what's
up Simon here from galaxies. Dev today
we're diving into the real unfiled truth
about what it takes to ship react native
app not just the coding part the whole
journey from idea to App Store success
I'll be honest I haven't correct the
Magic app store code but I spent way
more time on things that I shouldn't
have done or should have done so much
faster I want to give you my insights
and keep sharing my learnings throughout
this year as I keep building more of
these small personal apps both for fun
and also for training my shipping muscle
if you also plan to release a react
native app this year check out my brand
new Zero to Hero mission on galaxies.
dev this mission is divided into
different modules to teach you
everything from basics of Expo to
building real world apps and submitting
them to the App Stores it's really the
one course that will help you go from
idea to finished app while learning all
the essentials of react native and
before you take the course watch out for
these 10 lessons first of all you don't
need a super unique idea that's the
mistake I made in the past I was always
thinking of wow how can I come up with
something good I don't have good ideas
just take a more technical approach so
over the last months my Approach was to
use a tool called estro to do App Store
uh keyword research so with this tool I
can enter any kind of key keywords and I
can see popular apps and I can also see
how popular or how difficult those
keywords are so for example this could
be an interesting Niche it's like the
what would you choose it's sort of a
game and once your popularity is like
somewhere between let's say 20 and 50
and the difficulty is still below 50
like all these things could be potential
keywords and I Then followed this up
with a bit more research using sensor
Tower and so this displays like the
revenue and you could go like what would
you choose rather and you can go into
these apps and you can see okay 90k
downloads and 10K Revenue last month
probably this is something I could
tackle and I know from all the videos
I've watched that this always looks
super easy but trust me I've spent days
and weeks on this just like going
through keywords looking at apps finding
something that actually fits the I could
rank for the keyword and this is
actually generating Revenue but once you
found something it's actually pretty
cool and good feeling after I've got my
initial idea I usually go for something
that I call the C iCal path for every
application there's like one user story
that is the most challenging for example
I wanted to build this drag and drop
editor uh where I can like put tasks
into different buckets and I knew that
yeah I can do data storage and all that
fancy stuff and I can do overlays and I
can do styling but drag and drop with
multiple views that's going to be
challenging I started with this one key
feature and just try to implement that
critical path because when I know that I
can develop exactly this feature the
rest of the way up will simply fall in
place and so I'd recommend really think
about the application you want to do
think about the MVP and figure out what
is the most challenging part of this app
and can it be done with react native tip
number three is to plan first and code
later and I think you can actually do
like the critical path coding before
this but once you get the critical path
you should really make it stop and think
and that's the mistake I made as well so
last time I really went into like okay I
want to try this technology um I think I
want to use Legend State and I want to
have sink and stuff and so for like
multiple days or even weeks I was
working on Legend State and honestly in
the end I just went to sealite and
ditched it all and the same was true for
multiple components in my application
like I restructured them so many times I
lost really a lot of time on that and
you can really save time by just taking
like one or two days off before you dive
into the real coding after your critical
path Fletch out the MVP think about the
features you really want to do that
should be included in the first version
and only once you have a really clear
picture of the structure of your app the
libraries you want to use and the
features then you can begin to code and
this also nicely ties into learning
number four eliminate Overkill I've done
so many cool things because I think they
are cool but they're completely a waste
of time in the beginning for example you
might say well this is still required
but honestly nobody cares if your
application comes with dark mode in the
beginning it doesn't really matter and
the problem is that as a developer I
thought these things are kind of easy I
use native wind so I just better get
started and add dark mode everywhere but
it still takes a lot of time to set it
up correctly and buck fix on all the
different platforms and make sure it
everywhere looks good and then I also
set up like tainted icons because they
were cool on iOS and before you notice
it like you spend hours and hours on
these tiny little things that sound
really easy as a developer but
ultimately they distract you from the
goal of shipping your first application
your first MVP version as soon as
possible to your users and I know that
this is actually not that easy that's
easier said than done and I've made the
mistake myself so this is why tip number
five comes in really handy make plans
for future versions that also really
helped me to stay focused on the MVP so
when you get like excited oh I found a
keyword I found my Niche I want to build
this application you come up with like
10 different things that this
application should include and it makes
it great but you can't do all these
things for the first MVP version or at
least you shouldn't as a little tip just
keep a lot of future versions I've wrote
this kind of detailed outline for like
version 1.1 vers point2 I want to do at
some point widgets in the application I
want to add some more Pro features I
want to have a different T and I want a
localization like I could have
integrated all these things in the first
version but I thought that well let's
just get started with a basic version
that's had this essential functionality
which is for this task manager like to
put tasks into different lists move them
around dive into a list and then see the
details and like the basics of a task
manager but sketching out my features
for future version helps me to stay sane
at the same time also keep up my
momentum I've noticed this before after
the initial 1.0 launch I'm usually like
okay I'm done let's move on if you have
things you could do for 1.1 1.2 you
still keep up that excitement because
it's still your project and there's
still fire in you to develop new
features for it I definitely want to get
back into this as soon as possible and
you see version 1.1 is already shipped
and I'm happy to dive into witches very
soon tip number five which is more sort
of like an encouragement is that you
don't have to be a designer to create a
goodlook application there are great AI
tools out there and also normal editing
tools that will help you do a lot so I
really like to use mid Journey although
I didn't use like these designs for my
app icon I think I actually used one of
those designs here for the Matrix
manager and as well I was lately
thinking about a game and it's great at
coming up like with game assets once you
get a hang of it and know how to uh
write the correct prompts additionally I
then also looked into figma because in
figma you can find great designs for
creating your app store assets honestly
if my designer sees it he will say like
oh Simon you're so bad it's so easy but
I have no idea how figma works but there
are pry cool uh templates that you can
use you just drop in the screenshots of
your application so this is from one of
the calorie tracker applications I had
or this was my text to speech I used a
slightly different template there are
just many templates here in figma that
you can use where you can create
professionally looking screenshots or a
previews for your application on the App
Store and this is unbelievable important
because this is what users see on the
App Store don't spend weeks on your
application and then just like try to
throw these screenshots together in half
an hour so you can submit it take some
time to craft compelling UI whether it
is through figma or like canva or
anything you don't need a designer
usually for these small side projects
you can get really far with AI and the
free tools available now tip number
seven is actually about coding I want to
give one tip the other stuff is like you
can check out the videos on my channel
on building react native apps and our
mission on galaxy. dev if you want to
build your own applications but one
specific tip that I also had to learn is
debug in isolation now the reason is
simple if you start a new site project
you usually a bit more open to new
technology and you're trying out things
so in my application I was for example
trying out Legend State because I
thought it's really great and by the way
it is really great and I wanted to make
it work with some sort of very specific
scenario I want to start offline and I
want to be able at some point to sync
this to super base so like local first
but then also when the user is pro
syncing and it just didn't work for me
in my application ultimately I started a
new Expo app I added Legend State and I
tried from the basics up and I noticed
that oh Legend State actually was never
the problem it was my setup and my
application and how I tried to fit it
into my app so really if you're working
with new technology in a new Greenfield
application debug in isolation you're
going to save a lot of time things might
work in a completely blank application
and you mix in like two three
dependencies and suddenly it's not
working and you will never discover
what's the problem in the first place
otherwise tip number eight is for all of
you who probably haven't released an
application yet and that's expect to be
rejected I so far haven't achieved
submitting my application to Apple or
Google and get it through the revenue
process in the first try if I've never
done it I don't know why it's just not
working there's always something that
these people have to complain and
sometimes that's actually right because
I was a bit lazy but that's a different
story so expect that your application
might be rejected in the first try and
that's not a big deal you can always
make a new build if you're using EAS in
the cloud if you're using ES locally
it's not too hard to make a new Bild and
just resubmit your application you
should just not go into this with the
expectation especially if you have like
a deadline that okay on day x my
application needs to be released because
we have all this big marketing going on
and I submitted like just 5 days before
don't do that never do that take enough
time for the release process especially
if it's the first version but also for
like major new versions there will be
things that the process discovers and
sometimes honestly it's a bit random why
they reject your application and then it
can take quite some time to get on the
same page with them and fix the things
that might or might not work because
they test in strange environment but
ultimately I've learned actually a lot
from the revenue I usually by now and
know that I need to have a to and a
privacy Linked In the description of my
app store entry I know how to set up my
iOS App Store subscription elements and
how to include them I know which Keys
need to be present in the app Jason and
which information needs to be on a
specific screen so you really get better
and that's why can train your shipping
muscle by doing more all right tip
number nine build it and they will not
come you've probably heard that it's not
as easy anymore as it was probably like
10 years ago to make a super popular
application there's like just the amount
of applications on this store you get
super excited about this app and maybe
your wife or husband or your mother or
dad or whoever but then it pretty much
stops and nobody else cares about your
tiny little application that you've been
tinkering on over the last couple of
weeks you really can't expect that
anyone will just suddenly dive into the
app and throw money at you that's just
not going to happen I'm actually pretty
happy with this like I've got quite some
Impressions and product views and when I
see this that I have Impressions and
product views it's more onto me like to
improve the conversion rate and like get
people to actually download and use my
device and then ultimately they might
pay for the application if they find
Value in it but thinking that just
releasing the application and you're
done that just won't do it so plan some
sort of marketing there are different
strategies that you can use I know that
many people currently use like Tik Tok
so influencers create videos about your
application where they use them I
haven't been trying that out simply
because I want to first like make sure
the application is actually decent
before I throw money at it just have
this in mind that only because you
release the application it's not going
to be a success on top of that I've now
also added analytics to my application
I've been trying out different services
and I will report on how it works and
what I think is the best soon Ben award
gave me this tip by the way check out
our episode on the podcast on the rocket
ship podcast where we talked about his
Game Void pad and he told me to
definitely add analytics so you see how
people use and interact with your
application and where they drop off and
so that gives you a clue of how you can
improve your app all right the final tip
nothing is failure if you can learn from
it all my three applications don't
really make any money compared to what I
usually do but they've been great f to
develop I learned a lot about react
native in general about Native win about
the submission process and how to handle
subscription elements although like they
don't really have a lot of users yet I'm
still working on them I'm getting better
with ASO so with App Store optimization
I'm trying to improve like ranking for
keywords trying different text changing
the like visuals of the application on
the store and now also with tracking
trying to see how users use my app
including session replays if like
there's anything wrong with my apps
that's really the Ultimate key of
sticking to it you can't expect instant
results you will also get a lot of
knowledge with new tools and new
Frameworks you try out and you simply
keep on iterating ultimately at the end
of the day for me that's the fun of
building and shipping native apps and
overall that's just for me the the
critical thing that I don't lose
excitement about what I do all right so
there you have it 10 lessons from
someone who's been through it building
apps is a journey and every developer's
path is different but I hope the these
insights help you avoid some of the
pitfalls that I've encountered they
won't make you an overnight millionaire
but maybe they can give you
encouragement to start your own apps
this year it's fun you learn so much
from getting your hands dirty and
eventually you might actually have a
great idea and build a little fortune on
the side if you also want to build and
ship your first react native app in 2025
check out the new zero2 hero mission on
galaxies. d/ missions which just got the
fifth module about push notifications in
app purchases Expo module and it's
almost complete now and if you found
this video helpful don't forget to like
And subscribe for more real world
development insights oh and drop a
comment below with your own EP
development lessons I love to hear them
and your stories and why you got
rejected by Apple I'm open to share more
about my journey this year so let me
know if you want more videos about it
and I will do it I'll catch you in the
next one and until then of course happy
coding Simon
[Music]
